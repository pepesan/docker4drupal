version: '3'
services:

  #PHP Service
  app:
    image: "$DOCKER_IMAGE"
    #image: drupal:8.8.8-fpm-buster
    container_name: app
    restart: always
    depends_on:
      - mariadb
    tty: true
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
    working_dir: /var/www/web
    ports:
      - "9001:9000"
    volumes:
      - "./drupal:/var/www:rw"
      - ./settings.php:/var/www/web/sites/default/settings.php
      - ./local.ini:/usr/local/etc/php/conf.d/local.ini
      - ./volumes/app-tmp:/tmp
    networks:
      - app-network

  #Nginx Service
  webserver:
    image: nginx:alpine
    container_name: webserver
    restart: unless-stopped
    depends_on:
      - app
      - mariadb
    tty: true
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./drupal:/var/www
      - ./app.conf:/etc/nginx/conf.d/default.conf
      - ./volumes/logs:/var/log/nginx
    networks:
      - app-network

  #MySQL Service
  mariadb:
    image: mariadb:10.5.5-focal
    container_name: mariadb
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306"
    environment:
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: drupal
      MYSQL_USER: drupal
      MYSQL_PASSWORD: drupal
    volumes:
      - ./volumes/mariadb:/var/lib/mysql/
      - ./my.cnf:/etc/mysql/my.cnf
      - ./volumes/mariadb-tmp:/tmp
    healthcheck:
      test: "mysql --user=$MYSQL_USER --password=$MYSQL_PASSWORD --execute \"SHOW DATABASES;\""
      interval: 3s
      timeout: 1s
      retries: 5
    networks:
      - app-network
  redis:
    container_name: "redis"
    image: wodby/redis:$REDIS_TAG
    restart: unless-stopped
    tty: true
    ports:
    - 6379:6379
    networks:
      - app-network
  crond:
    image: "$DOCKER_IMAGE"
    container_name: crond
    environment:
      CRONTAB: "0 * * * * drush -r /var/www/web cron"
      #LD_PRELOAD: "/usr/local/lib/preloadable_libiconv.so"
    #command: crond -f -d 0
    #command: cron && tail -f /var/log/cron.log
    command: drush -r /var/www/web cron
    depends_on:
      - app
    networks:
      - app-network
    volumes:
      - ./drupal:/var/www
      #ยก- ./volumes/cron.log:/var/log/cron.log
  varnish:
    image: varnish
    container_name: "varnish"
    depends_on:
      - webserver
    volumes:
    - ./default.vcl:/etc/varnish/default.vcl
    ports:
    - 8080:80
    networks:
      - app-network
    environment:
      VARNISH_SECRET: secret
      VARNISH_BYPASS: "false"
    #  VARNISH_BACKEND_HOST: webserver
    #  VARNISH_BACKEND_PORT: 80
    #  VARNISH_CONFIG_PRESET: drupal
    #  VARNISH_ALLOW_UNRESTRICTED_PURGE: 1
  solr:
    image: solr
    container_name: "solr"
    environment:
      SOLR_DEFAULT_CONFIG_SET: $SOLR_CONFIG_SET
      SOLR_HEAP: 1024m
    networks:
      - app-network
    volumes:
    #- ./solr-tmp:/tmp
    - ./solr-config:/opt/solr/server/solr/drupal
    #- ./solr-config2:/opt/solr/data/drupal
    ports:
    - 8983:8983
#Docker Networks
networks:
  app-network:
    driver: bridge